package basic;

import org.apache.kafka.clients.producer.*;
import org.apache.kafka.common.serialization.StringSerializer;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.Properties;
import java.util.concurrent.ExecutionException;

public class ProducerDemo {

    public static void main(String[] args) throws ExecutionException, InterruptedException {

        final Logger logger = LoggerFactory.getLogger(ProducerDemo.class);

        String bootstrapServers = "localhost:9092";
        String topic = "test";

        // create Producer properties
        Properties properties = new Properties();
        properties.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, bootstrapServers);
        properties.setProperty(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());
        properties.setProperty(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());
        properties.setProperty(ProducerConfig.ACKS_CONFIG, "1");

        //创建producer
        KafkaProducer<String, String> producer = new KafkaProducer<String, String>(properties);

        //创建一个没有key的record，producer会按照roundrobin方式发送
        ProducerRecord<String, String> recordNoKey =
                new ProducerRecord<String, String>(topic, "hello world without key");

        //发送数据 - asynchronous
        //producer.send(recordNoKey);
        //flush数据 - blocking call
        //producer.flush();
        //difference between send() and flush() ?

        //创建一个有key的record，会按照hash key的方式发送
        String key = "id1";
        ProducerRecord<String, String> recordWithKey =
                new ProducerRecord<String, String>(topic, key, "hello world with key");
        //producer.send(recordWithKey);

        //如果我想知道我的数据发送到哪里去了呢？一般代码里没有这一段，因为不会写到console，而是直接去logger日志里读取
        producer.send(recordWithKey, new Callback() {
            // 当这条信息发送成功了或者失败了 这个方法就会返回
            public void onCompletion(RecordMetadata recordMetadata, Exception e) {
                // 当信息发送成功
                if (e == null) {
                    logger.info("Received new metadata. \n" +
                            "Topic:" + recordMetadata.topic() + "\n" +
                            "Partition: " + recordMetadata.partition() + "\n" +
                            "Offset: " + recordMetadata.offset() + "\n" +
                            "Timestamp: " + recordMetadata.timestamp());
                } else {
                    //当信息发送失败
                    logger.error("Error while producing", e);
                }
            }
        }).get(); //在production里写代码时候不可以这样做🚫

        // flush数据并关闭producer
        producer.close();

    }
}
