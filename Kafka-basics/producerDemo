package basic;

import org.apache.kafka.clients.producer.*;
import org.apache.kafka.common.serialization.StringSerializer;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.Properties;
import java.util.concurrent.ExecutionException;

public class ProducerDemo {

    public static void main(String[] args) throws ExecutionException, InterruptedException {

        final Logger logger = LoggerFactory.getLogger(ProducerDemo.class);

        String bootstrapServers = "localhost:9092";
        String topic = "test";

        // create Producer properties
        Properties properties = new Properties();
        properties.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, bootstrapServers);
        properties.setProperty(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());
        properties.setProperty(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());
        properties.setProperty(ProducerConfig.ACKS_CONFIG, "1");

        // create producer
        KafkaProducer<String, String> producer = new KafkaProducer<String, String>(properties);

        // creat record without key, producer will send message in "roundrobin" order
        ProducerRecord<String, String> recordNoKey =
                new ProducerRecord<String, String>(topic, "hello world without key");

        //send message - asynchronous
        producer.send(recordNoKey);
        //flush data - blocking call
        producer.flush();
        //difference between send() and flush() ?

        //creat record with key, producer will send message in "hash key" order
        String key = "id1";
        ProducerRecord<String, String> recordWithKey =
                new ProducerRecord<String, String>(topic, key, "hello world with key");
        //producer.send(recordWithKey);

        // If I want to know whether the message is sent succesfully,we can create the onCompletion funtioin, show the result in console.
        // But in general ,we won't use this function, because we will save the results in loggers, not print in console.
        // But it will be easier for someone first run the producer code to kafka,and make sure whether it works or not.
        producer.send(recordWithKey, new Callback() {
            // when the message is sent succesfully or not , the result will be print in console
            public void onCompletion(RecordMetadata recordMetadata, Exception e) {
                // when it successes:
                if (e == null) {
                    logger.info("Received new metadata. \n" +
                            "Topic:" + recordMetadata.topic() + "\n" +
                            "Partition: " + recordMetadata.partition() + "\n" +
                            "Offset: " + recordMetadata.offset() + "\n" +
                            "Timestamp: " + recordMetadata.timestamp());
                } else {
                    // when it fails:
                    logger.error("Error while producing", e);
                }
            }
        }).get(); 

        // close producer after flush()
        producer.close();

    }
}
